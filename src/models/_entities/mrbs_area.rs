//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "mrbs_area")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub disabled: i8,
    #[sea_orm(unique)]
    pub area_name: Option<String>,
    pub sort_key: String,
    pub timezone: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub area_admin_email: Option<String>,
    pub resolution: Option<i32>,
    pub default_duration: Option<i32>,
    pub default_duration_all_day: i8,
    pub morningstarts: Option<i32>,
    pub morningstarts_minutes: Option<i32>,
    pub eveningends: Option<i32>,
    pub eveningends_minutes: Option<i32>,
    pub private_enabled: Option<i8>,
    pub private_default: Option<i8>,
    pub private_mandatory: Option<i8>,
    pub private_override: Option<String>,
    pub min_create_ahead_enabled: Option<i8>,
    pub min_create_ahead_secs: Option<i32>,
    pub max_create_ahead_enabled: Option<i8>,
    pub max_create_ahead_secs: Option<i32>,
    pub min_delete_ahead_enabled: Option<i8>,
    pub min_delete_ahead_secs: Option<i32>,
    pub max_delete_ahead_enabled: Option<i8>,
    pub max_delete_ahead_secs: Option<i32>,
    pub max_per_day_enabled: i8,
    pub max_per_day: i32,
    pub max_per_week_enabled: i8,
    pub max_per_week: i32,
    pub max_per_month_enabled: i8,
    pub max_per_month: i32,
    pub max_per_year_enabled: i8,
    pub max_per_year: i32,
    pub max_per_future_enabled: i8,
    pub max_per_future: i32,
    pub max_secs_per_day_enabled: i8,
    pub max_secs_per_day: i32,
    pub max_secs_per_week_enabled: i8,
    pub max_secs_per_week: i32,
    pub max_secs_per_month_enabled: i8,
    pub max_secs_per_month: i32,
    pub max_secs_per_year_enabled: i8,
    pub max_secs_per_year: i32,
    pub max_secs_per_future_enabled: i8,
    pub max_secs_per_future: i32,
    pub max_duration_enabled: i8,
    pub max_duration_secs: i32,
    pub max_duration_periods: i32,
    #[sea_orm(column_type = "Text", nullable)]
    pub custom_html: Option<String>,
    pub approval_enabled: Option<i8>,
    pub reminders_enabled: Option<i8>,
    pub enable_periods: Option<i8>,
    #[sea_orm(column_type = "Text", nullable)]
    pub periods: Option<String>,
    pub confirmation_enabled: Option<i8>,
    pub confirmed_default: Option<i8>,
    pub times_along_top: i8,
    pub default_type: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::mrbs_room::Entity")]
    MrbsRoom,
}

impl Related<super::mrbs_room::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MrbsRoom.def()
    }
}
