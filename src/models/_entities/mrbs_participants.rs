//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "mrbs_participants")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub entry_id: i32,
    pub username: Option<String>,
    pub create_by: Option<String>,
    pub registered: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::mrbs_entry::Entity",
        from = "Column::EntryId",
        to = "super::mrbs_entry::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    MrbsEntry,
}

impl Related<super::mrbs_entry::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MrbsEntry.def()
    }
}
